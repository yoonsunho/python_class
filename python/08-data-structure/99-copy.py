# ================================================
# 가변(mutable) 객체 예시
# ================================================
print('가변(mutable) 객체 예시')
a = [1, 2, 3, 4]
b = a
b[0] = 100

print(f'a의 값: {a}')  #[100, 2, 3, 4]
print(f'b의 값: {b}')  #b의 값: [100, 2, 3, 4]
print(f'a와 b가 같은 객체를 참조하는가? {a is b}')  #True

# ================================================
# 불변(immutable) 객체 예시
# ================================================
print('\n불변(immutable) 객체 예시')
a = 20
b = a
b = 10

print(f'a의 값: {a}')  #20
print(f'b의 값: {b}')  #10
print(a is b)  #False

# ================================================
# id() 함수를 사용한 메모리 주소 확인
# ================================================
print('\n메모리 주소 확인')
x = [1, 2, 3]
y = x
z = [1, 2, 3]

print(f'x의 id: {id(x)}') #1213150893376
print(f'y의 id: {id(y)}') #1213150893376
print(f'z의 id: {id(z)}') #1213150919872
print(f'x와 y는 같은 객체인가? {x is y}') #True
print(f'x와 z는 같은 객체인가? {x is z}') #False #모습만 동일

# ================================================
# 얕은 복사
# ================================================
print('\n얕은 복사 예시')

# 1차원 리스트
# 모습만 같은 애들 실제 주소값 다름
a = [1, 2, 3]
b = a[:]  # 슬라이싱
c = a.copy()  # copy() 메서드
d = list(a)  # list() 함수

b[0] = 100
c[0] = 999
d[0] = 8080
print(a)  #[1, 2, 3]
print(b)  #[100, 2, 3]
print(c)  #[999, 2, 3]
print(d)  #[8080, 2, 3]

# 다차원 리스트
print('\n다차원 리스트 얕은 복사의 한계')
a = [1, 2, [3, 4, 5]]
b = a[:]

b[0] = 999
print(a)  #[1, 2, [3, 4, 5]]
print(b)  #[999, 2, [3, 4, 5]]

b[2][1] = 100
print(a)  #[1, 2, [3, 100, 5]]
print(b)  #[999, 2, [3, 100, 5]]
print(f'a[2]와 b[2]가 같은 객체인가? {a[2] is b[2]}')  #True

# ================================================
# 깊은 복사
# ================================================
import copy

print('\n깊은 복사 예시')
a = [1, 2, [3, 4, 5]]
b = copy.deepcopy(a)

b[2][1] = 100
print(a)  #[1, 2, [3, 4, 5]]
print(b)  #[1, 2, [3, 100, 5]]
print(f'a[2]와 b[2]가 같은 객체인가? {a[2] is b[2]}')  #False

# 복잡한 중첩 객체 예시
print('\n복잡한 중첩 객체 깊은 복사')
original = {
    'a': [1, 2, 3],
    'b': {
        'c': 4,
        'd': [5, 6],
    },
}
copied = copy.deepcopy(original)

copied['a'][1] = 100
copied['b']['d'][0] = 500

print(f'원본: {original}')  #원본: {'a': [1, 2, 3], 'b': {'c': 4, 'd': [5, 6]}}
print(f'복사본: {copied}')  #복사본: {'a': [1, 100, 3], 'b': {'c': 4, 'd': [500, 6]}}
print(
    f'original["b"]와 copied["b"]가 같은 객체인가? {original["b"] is copied["b"]}'
)  #False
